(dp1
S'output'
p2
S"<class 'serial.serialutil.SerialException'> device reports readiness to read but returned no data (device disconnected?)"
p3
sS'layer'
p4
S'/home/ismael/Escritorio/web2py/applications/arduino_scada/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - api is an example of Hypermedia API support and access control\n#########################################################################\nimport serial\nimport time\n\ndef index():\n    \n    response.flash = T("Welcome to web2py!")\n    return dict(message=T(\'Hello World\'))\n\n\n\npuerto_Serie=serial.Serial(\'/dev/ttyACM0\', 57600)   # En windows COM34\t\npuerto_Serie.close()\npuerto_Serie.open()\n   \ndef recibe_datos():\n\t\n\tvalor=int(request.vars.Valor)\n\t\n\tif (valor==1):\n\t\tcadena=\'a\'\n\n\tif (valor==0):\n\t\tcadena=\'b\'\n\t\n\t## ENCENDER (a), Y APAGAR (b) \n\tpuerto_Serie.write(cadena)   # Mandamos por puerto serie lo le\xc3\xaddo desde el teclado\n\t\n\ttime.sleep(0.1)   # Peque\xc3\xb1o tiempo de espera para esperar\n\n\t\ndef recibe_datos2():\n\t\n\tdatos=[]\n  \n\tdatos=puerto_Serie.readline()   # Imprima lo que haya en el buffer de recepcion, lo que manda arduino\n\t\n\tif len(datos)>5:\n\t\tdato_nivel=datos[0:2]\n\t\tdato_puerta=datos[3]\n\telse:\n\t\tdato_nivel=datos[0]\n\t\tdato_puerta=datos[2]\n\n\tdic = {"nivel":dato_nivel , "puerta":dato_puerta}\n\n\treturn dic\n\t\n\ttime.sleep(0.1)   # Peque\xc3\xb1o tiempo de espera para esperar\n\n\t\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_login() \ndef api():\n    """\n    this is example of API with access control\n    WEB2PY provides Hypermedia API (Collection+JSON) Experimental\n    """\n    from gluon.contrib.hypermedia import Collection\n    rules = {\n        \'<tablename>\': {\'GET\':{},\'POST\':{},\'PUT\':{},\'DELETE\':{}},\n        }\n    return Collection(db).process(request,response,rules)\n\n\t\n\nresponse._vars=response._caller(recibe_datos2)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.KeyError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.KeyError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.KeyError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.KeyError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.KeyError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.KeyError object>'
p23
sS'args'
p24
S"('/home/ismael/Escritorio/web2py/applications/arduino_scada/controllers/default.py',)"
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.KeyError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.KeyError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.KeyError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.KeyError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.KeyError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.KeyError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.KeyError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.KeyError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.KeyError object>'
p47
sS'__doc__'
p48
S"'Mapping key not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.KeyError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'/home/ismael/Escritorio/web2py/applications/arduino_scada/controllers/default.py'"
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S's\xfaR\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>arduino_scada</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">CONTENT_LENGTH</td><td style="vertical-align:top;">:</td><td><div>30</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">CONTENT_TYPE</td><td style="vertical-align:top;">:</td><td><div>application/x-www-form-urlencoded; charset=UTF-8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>*/*</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>no-cache</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONTENT_LENGTH</td><td style="vertical-align:top;">:</td><td><div>30</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONTENT_TYPE</td><td style="vertical-align:top;">:</td><td><div>application/x-www-form-urlencoded; charset=UTF-8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>localhost:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_PRAGMA</td><td style="vertical-align:top;">:</td><td><div>no-cache</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://localhost:8000/arduino_scada/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:30.0) Gecko/20100101 Firefox/30.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_X_REQUESTED_WITH</td><td style="vertical-align:top;">:</td><td><div>XMLHttpRequest</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/arduino_scada/default/recibe_datos2.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>55888</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>ismael-HP-630-Notebook-PC</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/ismael/Escritorio/web2py/applications/scada/&#x27;, &#x27;/home/ismael/Escritorio/web2py/applications/admin/&#x27;, &#x27;/home/ismael/Escritorio/web2py/applications/arduino_scada/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/ismael/Escritorio/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x2fe8290: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;ismael-HP-630-Notebook-PC&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: True, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/ismael/Escritorio/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;1&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">content_length</td><td style="vertical-align:top;">:</td><td><div>30</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">content_type</td><td style="vertical-align:top;">:</td><td><div>application/x-www-form-urlencoded; charset=UTF-8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/ismael/Escritorio/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>*/*</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>no-cache</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_content_length</td><td style="vertical-align:top;">:</td><td><div>30</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_content_type</td><td style="vertical-align:top;">:</td><td><div>application/x-www-form-urlencoded; charset=UTF-8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>localhost:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_pragma</td><td style="vertical-align:top;">:</td><td><div>no-cache</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://localhost:8000/arduino_scada/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:30.0) Gecko/20100101 Firefox/30.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_x_requested_with</td><td style="vertical-align:top;">:</td><td><div>XMLHttpRequest</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>ismael-HP-630-Notebook-PC</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/arduino_scada/default/recibe_datos2.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>55888</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/arduino_scada/default/recibe_datos2.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>ismael-HP-630-Notebook-PC</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/ismael/Escritorio/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.11-stable+timestamp.2014.09.15.23.35.11</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7fbbf5afc1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x2f7c600&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7fbbdc1c0550&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7fbbf5afc1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x2f7c600&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7fbbdc1c0550&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/ismael/Escritorio/web2py/applications/arduino_scada/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>recibe_datos2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/ismael/Escritorio/web2py/applications/scada/&#x27;, &#x27;/home/ismael/Escritorio/web2py/applications/admin/&#x27;, &#x27;/home/ismael/Escritorio/web2py/applications/arduino_scada/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/ismael/Escritorio/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x2fe8290: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;ismael-HP-630-Notebook-PC&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: True, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/ismael/Escritorio/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;1&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/ismael/Escritorio/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>ismael-HP-630-Notebook-PC</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.11-stable+timestamp.2014.09.15.23.35.11</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_sheduler</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 10, 22, 18, 15, 10, 782551)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/arduino_scada/default/recibe_datos2.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 10, 22, 16, 15, 10, 782580)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>arduino_scada/127.0.0.1.2014-10-22.18-15-10.72bd3d8e-6c23-41d8-9d1a-f16bacb3374a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7fbbdc5fbe10&gt;</div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'/home/ismael/Escritorio/web2py/gluon/restricted.py'
p63
sS'dump'
p64
(dp65
S'self.traceback'
p66
S"'no traceback because template parsing error'"
p67
sS'self'
p68
S'RestrictedError()'
p69
sS'traceback.format_exc'
p70
S'<function format_exc>'
p71
sS'global traceback'
p72
S"<module 'traceback' from '/usr/lib/python2.7/traceback.pyc'>"
p73
ssS'lnum'
p74
I143
sS'lines'
p75
(dp76
I138
S'        self.code = code'
p77
sI139
S'        self.output = output'
p78
sI140
S'        self.environment = environment'
p79
sI141
S'        if layer:'
p80
sI142
S'            try:'
p81
sI143
S'                self.traceback = traceback.format_exc()'
p82
sI144
S'            except:'
p83
sI145
S"                self.traceback = 'no traceback because template parsing error'"
p84
sI146
S'            try:'
p85
sI147
S'                self.snapshot = snapshot(context=10, code=code,'
p86
ssS'call'
p87
S'(self=RestrictedError(), layer=\'/home/ismael/Escritorio/web2py/applications/arduino_scada/controllers/default.py\', code=\'# -*- coding: utf-8 -*-\\n# this file is released ...\\n\\nresponse._vars=response._caller(recibe_datos2)\\n\', output="<class \'serial.serialutil.SerialException\'> devi... read but returned no data (device disconnected?)", environment={\'A\': <class \'gluon.html.A\'>, \'ANY_OF\': <class \'gluon.validators.ANY_OF\'>, \'ASSIGNJS\': <function ASSIGNJS>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, ...})'
p88
sS'func'
p89
g50
sa(dp90
g62
S'/usr/lib/python2.7/traceback.py'
p91
sg64
(dp92
S'etype'
p93
S'None'
p94
sS'limit'
p95
S'None'
p96
sS'tb'
p97
S'None'
p98
sS'value'
p99
S'None'
p100
sS'global format_exception'
p101
S'<function format_exception>'
p102
ssg74
I241
sg75
(dp103
I236
S''
sI237
S'def format_exc(limit=None):'
p104
sI238
S'    """Like print_exc() but return a string."""'
p105
sI239
S'    try:'
p106
sI240
S'        etype, value, tb = sys.exc_info()'
p107
sI241
S"        return ''.join(format_exception(etype, value, tb, limit))"
p108
sI242
S'    finally:'
p109
sI243
S'        etype = value = tb = None'
p110
sI244
S''
sI245
S''
ssg87
S'(limit=None)'
p111
sg89
S'format_exc'
p112
sa(dp113
g62
S'/usr/lib/python2.7/traceback.py'
p114
sg64
(dp115
S'tb'
p116
S'<traceback object>'
p117
sS'global format_tb'
p118
S'<function format_tb>'
p119
sS'list'
p120
S"['Traceback (most recent call last):\\n']"
p121
sS'limit'
p122
S'None'
p123
ssg74
I141
sg75
(dp124
I136
S'    these lines are concatenated and printed, exactly the same text is'
p125
sI137
S'    printed as does print_exception().'
p126
sI138
S'    """'
p127
sI139
S'    if tb:'
p128
sI140
S"        list = ['Traceback (most recent call last):\\n']"
p129
sI141
S'        list = list + format_tb(tb, limit)'
p130
sI142
S'    else:'
p131
sI143
S'        list = []'
p132
sI144
S'    list = list + format_exception_only(etype, value)'
p133
sI145
S'    return list'
p134
ssg87
S"(etype=<class 'serial.serialutil.SerialException'>, value=SerialException('device reports readiness to read but returned no data (device disconnected?)',), tb=<traceback object>, limit=None)"
p135
sg89
S'format_exception'
p136
sa(dp137
g62
S'/usr/lib/python2.7/traceback.py'
p138
sg64
(dp139
S'limit'
p140
S'None'
p141
sS'tb'
p142
S'<traceback object>'
p143
sS'global extract_tb'
p144
S'<function extract_tb>'
p145
sS'global format_list'
p146
S'<function format_list>'
p147
ssg74
I76
sg75
(dp148
I71
S'        tb = tb.tb_next'
p149
sI72
S'        n = n+1'
p150
sI73
S''
sI74
S'def format_tb(tb, limit = None):'
p151
sI75
S'    """A shorthand for \'format_list(extract_stack(f, limit))."""'
p152
sI76
S'    return format_list(extract_tb(tb, limit))'
p153
sI77
S''
sI78
S'def extract_tb(tb, limit = None):'
p154
sI79
S'    """Return list of up to limit pre-processed entries from traceback.'
p155
sI80
S''
ssg87
S'(tb=<traceback object>, limit=None)'
p156
sg89
S'format_tb'
p157
sa(dp158
g62
S'/usr/lib/python2.7/traceback.py'
p159
sg64
(dp160
S'global linecache'
p161
S"<module 'linecache' from '/usr/lib/python2.7/linecache.pyc'>"
p162
sS'linecache.checkcache'
p163
S'<function checkcache>'
p164
sS'filename'
p165
S"'/home/ismael/Escritorio/web2py/applications/arduino_scada/controllers/default.py'"
p166
ssg74
I100
sg75
(dp167
I96
S'        lineno = tb.tb_lineno'
p168
sI97
S'        co = f.f_code'
p169
sI98
S'        filename = co.co_filename'
p170
sI99
S'        name = co.co_name'
p171
sI100
S'        linecache.checkcache(filename)'
p172
sI101
S'        line = linecache.getline(filename, lineno, f.f_globals)'
p173
sI102
S'        if line: line = line.strip()'
p174
sI103
S'        else: line = None'
p175
sI104
S'        list.append((filename, lineno, name, line))'
p176
sI95
S'        f = tb.tb_frame'
p177
ssg87
S'(tb=<traceback object>, limit=None)'
p178
sg89
S'extract_tb'
p179
sa(dp180
g62
S'/usr/lib/python2.7/linecache.py'
p181
sg64
(dp182
S'global cache'
p183
S'{\'/home/ismael/Escritorio/web2py/applications/arduino_scada/controllers/default.py\': (2886, 1413993387.1266308, [\'# -*- coding: utf-8 -*-\\n\', \'# this file is released under public domain and you can use without limitations\\n\', \'\\n\', \'#########################################################################\\n\', \'## This is a sample controller\\n\', \'## - index is the default action of any application\\n\', \'## - user is required for authentication and authorization\\n\', \'## - download is for downloading files uploaded in the db (does streaming)\\n\', \'## - api is an example of Hypermedia API support and access control\\n\', \'#########################################################################\\n\', \'import serial\\n\', \'import time\\n\', \'\\n\', \'def index():\\n\', \'    \\n\', \'    response.flash = T("Welcome to web2py!")\\n\', "    return dict(message=T(\'Hello World\'))\\n", \'\\n\', \'\\n\', \'\\n\', ...], \'/home/ismael/Escritorio/web2py/applications/arduino_scada/controllers/default.py\'), \'/home/ismael/Escritorio/web2py/gluon/globals.py\': (45592, 1410824148.0, [\'#!/usr/bin/env python\\n\', \'# -*- coding: utf-8 -*-\\n\', \'\\n\', \'"""\\n\', \'| This file is part of the web2py Web Framework\\n\', \'| Copyrighted by Massimo Di Pierro <mdipierro@cs.depaul.edu>\\n\', \'| License: LGPLv3 (http://www.gnu.org/licenses/lgpl.html)\\n\', \'\\n\', \'Contains the classes for the global used variables:\\n\', \'\\n\', \'- Request\\n\', \'- Response\\n\', \'- Session\\n\', \'\\n\', \'"""\\n\', \'\\n\', \'from gluon.storage import Storage, List\\n\', \'from gluon.streamer import streamer, stream_file_or_304_or_206, DEFAULT_CHUNK_SIZE\\n\', \'from gluon.xmlrpc import handler\\n\', \'from gluon.contenttype import contenttype\\n\', ...], \'/home/ismael/Escritorio/web2py/gluon/globals.py\'), \'/home/ismael/Escritorio/web2py/gluon/restricted.py\': (10602, 1410824148.0, [\'#!/usr/bin/env python\\n\', \'# -*- coding: utf-8 -*-\\n\', \'\\n\', \'"""\\n\', \'| This file is part of the web2py Web Framework\\n\', \'| Copyrighted by Massimo Di Pierro <mdipierro@cs.depaul.edu>\\n\', \'| License: LGPLv3 (http://www.gnu.org/licenses/lgpl.html)\\n\', \'\\n\', "Restricted environment to execute application\'s code\\n", \'-----------------------------------------------------\\n\', \'"""\\n\', \'\\n\', \'import sys\\n\', \'try:\\n\', \'    import cPickle as pickle\\n\', \'except:\\n\', \'    import pickle\\n\', \'import traceback\\n\', \'import types\\n\', \'import os\\n\', ...], \'/home/ismael/Escritorio/web2py/gluon/restricted.py\'), \'/usr/lib/python2.7/dist-packages/serial/serialposix.py\': (24437, 1360952894.0, [\'#!/usr/bin/env python\\n\', \'#\\n\', \'# Python Serial Port Extension for Win32, Linux, BSD, Jython\\n\', \'# module for serial IO for POSIX compatible systems, like Linux\\n\', \'# see __init__.py\\n\', \'#\\n\', \'# (C) 2001-2010 Chris Liechti <cliechti@gmx.net>\\n\', \'# this is distributed under a free software license, see license.txt\\n\', \'#\\n\', \'# parts based on code from Grant B. Edwards  <grante@visi.com>:\\n\', \'#  ftp://ftp.visi.com/users/grante/python/PosixSerial.py\\n\', \'#\\n\', \'# references: http://www.easysw.com/~mike/serial/serial.html\\n\', \'\\n\', \'import sys, os, fcntl, termios, struct, select, errno, time\\n\', \'from serial.serialutil import *\\n\', \'\\n\', \'# Do check the Python version as some constants have moved.\\n\', \'if (sys.hexversion < 0x020100f0):\\n\', \'    import TERMIOS\\n\', ...], \'/usr/lib/python2.7/dist-packages/serial/serialposix.py\'), \'/usr/lib/python2.7/dist-packages/serial/serialutil.py\': (19266, 1312512898.0, [\'#! python\\n\', \'# Python Serial Port Extension for Win32, Linux, BSD, Jython\\n\', \'# see __init__.py\\n\', \'#\\n\', \'# (C) 2001-2010 Chris Liechti <cliechti@gmx.net>\\n\', \'# this is distributed under a free software license, see license.txt\\n\', \'\\n\', \'# compatibility for older Python < 2.6\\n\', \'try:\\n\', \'    bytes\\n\', \'    bytearray\\n\', \'except (NameError, AttributeError):\\n\', \'    # Python older than 2.6 do not have these types. Like for Python 2.6 they\\n\', \'    # should behave like str. For Python older than 3.0 we want to work with\\n\', \'    # strings anyway, only later versions have a true bytes type.\\n\', \'    bytes = str\\n\', \'    # bytearray is a mutable type that is easily turned into an instance of\\n\', \'    # bytes\\n\', \'    class bytearray(list):\\n\', \'        # for bytes(bytearray()) usage\\n\', ...], \'/usr/lib/python2.7/dist-packages/serial/serialutil.py\'), \'/usr/lib/python2.7/linecache.py\': (4118, 1393533160.0, [\'"""Cache lines from files.\\n\', \'\\n\', \'This is intended to read lines from modules imported -- hence if a filename\\n\', \'is not found, it will look down the module search path for a file by\\n\', \'that name.\\n\', \'"""\\n\', \'\\n\', \'import sys\\n\', \'import os\\n\', \'\\n\', \'__all__ = ["getline", "clearcache", "checkcache"]\\n\', \'\\n\', \'def getline(filename, lineno, module_globals=None):\\n\', \'    lines = getlines(filename, module_globals)\\n\', \'    if 1 <= lineno <= len(lines):\\n\', \'        return lines[lineno-1]\\n\', \'    else:\\n\', "        return \'\'\\n", \'\\n\', \'\\n\', ...], \'/usr/lib/python2.7/linecache.py\'), \'/usr/lib/python2.7/traceback.py\': (11255, 1393533161.0, [\'"""Extract, format and print information about Python stack traces."""\\n\', \'\\n\', \'import linecache\\n\', \'import sys\\n\', \'import types\\n\', \'\\n\', "__all__ = [\'extract_stack\', \'extract_tb\', \'format_exception\',\\n", "           \'format_exception_only\', \'format_list\', \'format_stack\',\\n", "           \'format_tb\', \'print_exc\', \'format_exc\', \'print_exception\',\\n", "           \'print_last\', \'print_stack\', \'print_tb\', \'tb_lineno\']\\n", \'\\n\', "def _print(file, str=\'\', terminator=\'\\\\n\'):\\n", \'    file.write(str+terminator)\\n\', \'\\n\', \'\\n\', \'def print_list(extracted_list, file=None):\\n\', \'    """Print the list of tuples as returned by extract_tb() or\\n\', \'    extract_stack() as a formatted stack trace to the given file."""\\n\', \'    if file is None:\\n\', \'        file = sys.stderr\\n\', ...], \'/usr/lib/python2.7/traceback.py\')}'
p184
sS'filename'
p185
S"'/home/ismael/Escritorio/web2py/applications/arduino_scada/controllers/default.py'"
p186
ssg74
I65
sg75
(dp187
I64
S'        if size != stat.st_size or mtime != stat.st_mtime:'
p188
sI65
S'            del cache[filename]'
p189
sI66
S''
sI67
S''
sI68
S'def updatecache(filename, module_globals=None):'
p190
sI69
S'    """Update a cache entry and return its list of lines.'
p191
sI60
S'            stat = os.stat(fullname)'
p192
sI61
S'        except os.error:'
p193
sI62
S'            del cache[filename]'
p194
sI63
S'            continue'
p195
ssg87
S"(filename='/home/ismael/Escritorio/web2py/applications/arduino_scada/controllers/default.py')"
p196
sg89
S'checkcache'
p197
sasS'pyver'
p198
S'Python 2.7.5+: /usr/bin/python (prefix: /usr)'
p199
sS'session'
p200
g57
(S's\x1a\x00\x00\x00<div><table></table></div>'
tRp201
sS'etype'
p202
S"<type 'exceptions.KeyError'>"
p203
sS'date'
p204
S'Wed Oct 22 18:15:10 2014'
p205
sS'response'
p206
g57
(S's\x1e2\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7fbbd8335ae8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_arduino_scada</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-b9fe89b4-804a-4d2c-ae01-12d214fb78a7<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div>: </div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>table3cols</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="brand" href="http://www.web2py.com/"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/arduino_scada/default/index.json</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div><span class="highlighted">web2py</span></div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>My Sites</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/site.json</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>This App</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/design.json/arduino_scada</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Controller&#x27;&gt;, False, &#x27;/admin/default/edit.json/arduino_scada/controllers/default.py&#x27;), (&lt;lazyT &#x27;View&#x27;&gt;, False, &#x27;/admin/default/edit.json/arduino_scada/views/default/recibe_datos2.json&#x27;), (&lt;lazyT &#x27;Layout&#x27;&gt;, False, &#x27;/admin/default/edit.json/arduino_scada/views/layout.html&#x27;), (&lt;lazyT &#x27;Stylesheet&#x27;&gt;, False, &#x27;/admin/default/edit.json/arduino_scada/static/css/web2py.css&#x27;), (&lt;lazyT &#x27;DB Model&#x27;&gt;, False, &#x27;/admin/default/edit.json/arduino_scada/models/db.py&#x27;), (&lt;lazyT &#x27;Menu Model&#x27;&gt;, False, &#x27;/admin/default/edit.json/arduino_scada/models/menu.py&#x27;), (&lt;lazyT &#x27;Database&#x27;&gt;, False, &#x27;/arduino_scada/appadmin/index.json&#x27;), (&lt;lazyT &#x27;Errors&#x27;&gt;, False, &#x27;/admin/default/errors.json/arduino_scada&#x27;), (&lt;lazyT &#x27;About&#x27;&gt;, False, &#x27;/admin/default/about.json/arduino_scada&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>web2py.com</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Download&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/download&#x27;), (&lt;lazyT &#x27;Support&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/support&#x27;), (&lt;lazyT &#x27;Demo&#x27;&gt;, False, &#x27;http://web2py.com/demo_admin&#x27;), (&lt;lazyT &#x27;Quick Examples&#x27;&gt;, False, &#x27;http://web2py.com/examples/default/examples&#x27;), (&lt;lazyT &#x27;FAQ&#x27;&gt;, False, &#x27;http://web2py.com/AlterEgo&#x27;), (&lt;lazyT &#x27;Videos&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/videos/&#x27;), (&lt;lazyT &#x27;Free Applications&#x27;&gt;, False, &#x27;http://web2py.com/appliances&#x27;), (&lt;lazyT &#x27;Plugins&#x27;&gt;, False, &#x27;http://web2py.com/plugins&#x27;), (&lt;lazyT &#x27;Layouts&#x27;&gt;, False, &#x27;http://web2py.com/layouts&#x27;), (&lt;lazyT &#x27;Recipes&#x27;&gt;, False, &#x27;http://web2pyslices.com/&#x27;), (&lt;lazyT &#x27;Semantic&#x27;&gt;, False, &#x27;http://web2py.com/semantic&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Documentation</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Preface&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/00&#x27;), (&lt;lazyT &#x27;Introduction&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/01&#x27;), (&lt;lazyT &#x27;Python&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/02&#x27;), (&lt;lazyT &#x27;Overview&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/03&#x27;), (&lt;lazyT &#x27;The Core&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/04&#x27;), (&lt;lazyT &#x27;The Views&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/05&#x27;), (&lt;lazyT &#x27;Database&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/06&#x27;), (&lt;lazyT &#x27;Forms and Validators&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/07&#x27;), (&lt;lazyT &#x27;Email and SMS&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/08&#x27;), (&lt;lazyT &#x27;Access Control&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/09&#x27;), (&lt;lazyT &#x27;Services&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/10&#x27;), (&lt;lazyT &#x27;Ajax Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/11&#x27;), (&lt;lazyT &#x27;Components and Plugins&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/12&#x27;), (&lt;lazyT &#x27;Deployment Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/13&#x27;), (&lt;lazyT &#x27;Other Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/14&#x27;), (&lt;lazyT &#x27;Buy this book&#x27;&gt;, False, &#x27;http://stores.lulu.com/web2py&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Community</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Groups&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/usergroups&#x27;), (&lt;lazyT &#x27;Twitter&#x27;&gt;, False, &#x27;http://twitter.com/web2py&#x27;), (&lt;lazyT &#x27;Live Chat&#x27;&gt;, False, &#x27;http://webchat.freenode.net/?channels=web2py&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Plugins</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div>[(&#x27;plugin_wiki&#x27;, False, &#x27;http://web2py.com/examples/default/download&#x27;), (&lt;lazyT &#x27;Other Plugins&#x27;&gt;, False, &#x27;http://web2py.com/plugins&#x27;), (&lt;lazyT &#x27;Layout Plugins&#x27;&gt;, False, &#x27;http://web2py.com/layouts&#x27;)]</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/recibe_datos2/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_arduino_scada</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/ismael/Escritorio/web2py/applications/arduino_scada/sessions/127.0.0.1-b9fe89b4-804a-4d2c-ae01-12d214fb78a7</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>c0762cbf4baf7f9af97c051e7fcb8083</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-b9fe89b4-804a-4d2c-ae01-12d214fb78a7</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_arduino_scada</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>arduino_scada</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Arduino Scada</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/recibe_datos2.json</div></td></tr></table></div>'
tRp207
sS'locals'
p208
(dp209
S'stat'
p210
S'posix.stat_result(st_mode=33188, st_ino=3555063,...993395, st_mtime=1413993387, st_ctime=1413993387)'
p211
sg75
S'[\'# -*- coding: utf-8 -*-\\n\', \'# this file is released under public domain and you can use without limitations\\n\', \'\\n\', \'#########################################################################\\n\', \'## This is a sample controller\\n\', \'## - index is the default action of any application\\n\', \'## - user is required for authentication and authorization\\n\', \'## - download is for downloading files uploaded in the db (does streaming)\\n\', \'## - api is an example of Hypermedia API support and access control\\n\', \'#########################################################################\\n\', \'import serial\\n\', \'import time\\n\', \'\\n\', \'def index():\\n\', \'    \\n\', \'    response.flash = T("Welcome to web2py!")\\n\', "    return dict(message=T(\'Hello World\'))\\n", \'\\n\', \'\\n\', \'\\n\', ...]'
p212
sS'filename'
p213
S"'/home/ismael/Escritorio/web2py/applications/arduino_scada/controllers/default.py'"
p214
sS'mtime'
p215
S'1413993316.374628'
p216
sS'fullname'
p217
S"'/home/ismael/Escritorio/web2py/applications/arduino_scada/controllers/default.py'"
p218
sS'filenames'
p219
S"['/home/ismael/Escritorio/web2py/applications/arduino_scada/controllers/default.py']"
p220
sS'size'
p221
S'2886'
p222
sssS'traceback'
p223
S'no traceback because template parsing error'
p224
s.